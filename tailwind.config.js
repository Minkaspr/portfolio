/** @type {import('tailwindcss').Config} */
module.exports = {
  content: ["./src/**/*.{html,js}"],
  darkMode: 'class',
  theme: {
    extend: {
      fontFamily: {
        'roboto': ['Roboto', 'sans-serif'],
        'poppins': ['Poppins', 'system-ui']
      },
      colors: {
        'light-primary': 'rgb(var(--light-primary) / <alpha-value>)',
        'light-surfaceTint': 'rgb(var(--light-surface-tint) / <alpha-value>)',
        'light-onPrimary': 'rgb(var(--light-on-primary) / <alpha-value>)',
        'light-primaryContainer': 'rgb(var(--light-primary-container) / <alpha-value>)',
        'light-onPrimaryContainer': 'rgb(var(--light-on-primary-container) / <alpha-value>)',
        'light-secondary': 'rgb(var(--light-secondary) / <alpha-value>)',
        'light-onSecondary': 'rgb(var(--light-on-secondary) / <alpha-value>)',
        'light-secondaryContainer': 'rgb(var(--light-secondary-container) / <alpha-value>)',
        'light-onSecondaryContainer': 'rgb(var(--light-on-secondary-container) / <alpha-value>)',
        'light-tertiary': 'rgb(var(--light-tertiary) / <alpha-value>)',
        'light-onTertiary': 'rgb(var(--light-on-tertiary) / <alpha-value>)',
        'light-tertiaryContainer': 'rgb(var(--light-tertiary-container) / <alpha-value>)',
        'light-onTertiaryContainer': 'rgb(var(--light-on-tertiary-container) / <alpha-value>)',
        'light-error': 'rgb(var(--light-error) / <alpha-value>)',
        'light-onError': 'rgb(var(--light-on-error) / <alpha-value>)',
        'light-errorContainer': 'rgb(var(--light-error-container) / <alpha-value>)',
        'light-onErrorContainer': 'rgb(var(--light-on-error-container) / <alpha-value>)',
        'light-background': 'rgb(var(--light-background) / <alpha-value>)',
        'light-onBackground': 'rgb(var(--light-on-background) / <alpha-value>)',
        'light-surface': 'rgb(var(--light-surface) / <alpha-value>)',
        'light-onSurface': 'rgb(var(--light-on-surface) / <alpha-value>)',
        'light-surfaceVariant': 'rgb(var(--light-surface-variant) / <alpha-value>)',
        'light-onSurfaceVariant': 'rgb(var(--light-on-surface-variant) / <alpha-value>)',
        'light-outline': 'rgb(var(--light-outline) / <alpha-value>)',
        'light-outlineVariant': 'rgb(var(--light-outline-variant) / <alpha-value>)',
        'light-shadow': 'rgb(var(--light-shadow) / <alpha-value>)',
        'light-scrim': 'rgb(var(--light-scrim) / <alpha-value>)',
        'light-inverseSurface': 'rgb(var(--light-inverse-surface) / <alpha-value>)',
        'light-inverseOnSurface': 'rgb(var(--light-inverse-on-surface) / <alpha-value>)',
        'light-inversePrimary': 'rgb(var(--light-inverse-primary) / <alpha-value>)',
        'light-primaryFixed': 'rgb(var(--light-primary-fixed) / <alpha-value>)',
        'light-onPrimaryFixed': 'rgb(var(--light-on-primary-fixed) / <alpha-value>)',
        'light-primaryFixedDim': 'rgb(var(--light-primary-fixed-dim) / <alpha-value>)',
        'light-onPrimaryFixedVariant': 'rgb(var(--light-on-primary-fixed-variant) / <alpha-value>)',
        'light-secondaryFixed': 'rgb(var(--light-secondary-fixed) / <alpha-value>)',
        'light-onSecondaryFixed': 'rgb(var(--light-on-secondary-fixed) / <alpha-value>)',
        'light-secondaryFixedDim': 'rgb(var(--light-secondary-fixed-dim) / <alpha-value>)',
        'light-onSecondaryFixedVariant': 'rgb(var(--light-on-secondary-fixed-variant) / <alpha-value>)',
        'light-tertiaryFixed': 'rgb(var(--light-tertiary-fixed) / <alpha-value>)',
        'light-onTertiaryFixed': 'rgb(var(--light-on-tertiary-fixed) / <alpha-value>)',
        'light-tertiaryFixedDim': 'rgb(var(--light-tertiary-fixed-dim) / <alpha-value>)',
        'light-onTertiaryFixedVariant': 'rgb(var(--light-on-tertiary-fixed-variant) / <alpha-value>)',
        'light-surfaceDim': 'rgb(var(--light-surface-dim) / <alpha-value>)',
        'light-surfaceBright': 'rgb(var(--light-surface-bright) / <alpha-value>)',
        'light-surfaceContainerLowest': 'rgb(var(--light-surface-container-lowest) / <alpha-value>)',
        'light-surfaceContainerLow': 'rgb(var(--light-surface-container-low) / <alpha-value>)',
        'light-surfaceContainer': 'rgb(var(--light-surface-container) / <alpha-value>)',
        'light-surfaceContainerHigh': 'rgb(var(--light-surface-container-high) / <alpha-value>)',
        'light-surfaceContainerHighest': 'rgb(var(--light-surface-container-highest) / <alpha-value>)',

        'dark-primary': 'rgb(var(--dark-primary) / <alpha-value>)',
        'dark-surfaceTint': 'rgb(var(--dark-surface-tint) / <alpha-value>)',
        'dark-onPrimary': 'rgb(var(--dark-on-primary) / <alpha-value>)',
        'dark-primaryContainer': 'rgb(var(--dark-primary-container) / <alpha-value>)',
        'dark-onPrimaryContainer': 'rgb(var(--dark-on-primary-container) / <alpha-value>)',
        'dark-secondary': 'rgb(var(--dark-secondary) / <alpha-value>)',
        'dark-onSecondary': 'rgb(var(--dark-on-secondary) / <alpha-value>)',
        'dark-secondaryContainer': 'rgb(var(--dark-secondary-container) / <alpha-value>)',
        'dark-onSecondaryContainer': 'rgb(var(--dark-on-secondary-container) / <alpha-value>)',
        'dark-tertiary': 'rgb(var(--dark-tertiary) / <alpha-value>)',
        'dark-onTertiary': 'rgb(var(--dark-on-tertiary) / <alpha-value>)',
        'dark-tertiaryContainer': 'rgb(var(--dark-tertiary-container) / <alpha-value>)',
        'dark-onTertiaryContainer': 'rgb(var(--dark-on-tertiary-container) / <alpha-value>)',
        'dark-error': 'rgb(var(--dark-error) / <alpha-value>)',
        'dark-onError': 'rgb(var(--dark-on-error) / <alpha-value>)',
        'dark-errorContainer': 'rgb(var(--dark-error-container) / <alpha-value>)',
        'dark-onErrorContainer': 'rgb(var(--dark-on-error-container) / <alpha-value>)',
        'dark-background': 'rgb(var(--dark-background) / <alpha-value>)',
        'dark-onBackground': 'rgb(var(--dark-on-background) / <alpha-value>)',
        'dark-surface': 'rgb(var(--dark-surface) / <alpha-value>)',
        'dark-onSurface': 'rgb(var(--dark-on-surface) / <alpha-value>)',
        'dark-surfaceVariant': 'rgb(var(--dark-surface-variant) / <alpha-value>)',
        'dark-onSurfaceVariant': 'rgb(var(--dark-on-surface-variant) / <alpha-value>)',
        'dark-outline': 'rgb(var(--dark-outline) / <alpha-value>)',
        'dark-outlineVariant': 'rgb(var(--dark-outline-variant) / <alpha-value>)',
        'dark-shadow': 'rgb(var(--dark-shadow) / <alpha-value>)',
        'dark-scrim': 'rgb(var(--dark-scrim) / <alpha-value>)',
        'dark-inverseSurface': 'rgb(var(--dark-inverse-surface) / <alpha-value>)',
        'dark-inverseOnSurface': 'rgb(var(--dark-inverse-on-surface) / <alpha-value>)',
        'dark-inversePrimary': 'rgb(var(--dark-inverse-primary) / <alpha-value>)',
        'dark-primaryFixed': 'rgb(var(--dark-primary-fixed) / <alpha-value>)',
        'dark-onPrimaryFixed': 'rgb(var(--dark-on-primary-fixed) / <alpha-value>)',
        'dark-primaryFixedDim': 'rgb(var(--dark-primary-fixed-dim) / <alpha-value>)',
        'dark-onPrimaryFixedVariant': 'rgb(var(--dark-on-primary-fixed-variant) / <alpha-value>)',
        'dark-secondaryFixed': 'rgb(var(--dark-secondary-fixed) / <alpha-value>)',
        'dark-onSecondaryFixed': 'rgb(var(--dark-on-secondary-fixed) / <alpha-value>)',
        'dark-secondaryFixedDim': 'rgb(var(--dark-secondary-fixed-dim) / <alpha-value>)',
        'dark-onSecondaryFixedVariant': 'rgb(var(--dark-on-secondary-fixed-variant) / <alpha-value>)',
        'dark-tertiaryFixed': 'rgb(var(--dark-tertiary-fixed) / <alpha-value>)',
        'dark-onTertiaryFixed': 'rgb(var(--dark-on-tertiary-fixed) / <alpha-value>)',
        'dark-tertiaryFixedDim': 'rgb(var(--dark-tertiary-fixed-dim) / <alpha-value>)',
        'dark-onTertiaryFixedVariant': 'rgb(var(--dark-on-tertiary-fixed-variant) / <alpha-value>)',
        'dark-surfaceDim': 'rgb(var(--dark-surface-dim) / <alpha-value>)',
        'dark-surfaceBright': 'rgb(var(--dark-surface-bright) / <alpha-value>)',
        'dark-surfaceContainerLowest': 'rgb(var(--dark-surface-container-lowest) / <alpha-value>)',
        'dark-surfaceContainerLow': 'rgb(var(--dark-surface-container-low) / <alpha-value>)',
        'dark-surfaceContainer': 'rgb(var(--dark-surface-container) / <alpha-value>)',
        'dark-surfaceContainerHigh': 'rgb(var(--dark-surface-container-high) / <alpha-value>)',
        'dark-surfaceContainerHighest': 'rgb(var(--dark-surface-container-highest) / <alpha-value>)',
      }
    },
  },
  plugins: [],
}

